#!/usr/bin/env bash
set -o errexit -o nounset -o pipefail; shopt -s nullglob
root=${0%/*}
file=$(basename "${BASH_SOURCE[0]}")
cd $root

. ../lib/cli-utils
. ../lib/thinder-environment.sh

set_thinder_description "Manage the Thinder environment storage"

function usage {
	local cmdlen=${#file}
	echo "Usage: ${file/\-/ } [args...]"
	echo
	echo $THINDER_DESCRIPTION
	echo
	echo "Options:"
	echo "  -h, --help                 Print this usage information"
	echo
	echo "Commands:"
	echo "    create [args...]         Create a new storage container"
	echo "        -s=n, --size=n       Specifies the size of the container, in bytes"
	echo "        -f=f, --filename=f   Specifies the filename of the container"
	echo
	echo "    resize [args...]         Resize a storage container"
	echo "        -s=n, --size=n       Specifies the size of the container, in bytes"
	echo "        -f=f, --filename=f   Specifies the filename of the container"
	echo
	echo "    connect [args...]        Connect a storage container to this environment"
	echo "        -f=f, --filename=f   Specifies the filename of the container"
	echo
	echo "    eject                    Eject the active storage container"
	echo
}

if [[ $# -eq 0 ]]; then
	# no parameters
	debug "no parameters given, print out usage"
	usage
	exit 0
fi

while thinder_getopt "${1:-}" opt val; do
	debug "processing subcommand option $opt"
	case $opt in
		--help | -h)
			usage
			exit 0;
			;;
		*)
			error "unknown option: $opt"
			exit 1
	esac
	shift
done

case "${1:-environment}" in
	create)
		shift
		size=""
		filename=$THINDER_BTRFS_IMAGE
		while thinder_getopt "${1:-}" opt val; do
			debug "processing subsubcommand option $opt"
			case $opt in
				--size | -s)
					if [[ "$val" == "" ]]; then
						critical "$opt expects a parameter"
						exit 1
					fi
					size="$val"
					;;
				--filename | -f)
					if [[ "$val" == "" ]]; then
						critical "$opt expects a parameter"
						exit 1
					fi
					filename="$val"
					;;
				*)
					critical "unknown option: $opt"
					exit 1
			esac
			shift
		done
		if [[ "$size" == "" ]]; then
			critical "please specify the size of the container (--size=n)"
			exit 1
		fi
		echo -n "Continue creating container at $filename [y/N] "
		read confirm
		if [[ "$confirm" == "y" ]]; then
			notice "creating container at $filename... "
			if ! fallocate -l "$size" "$filename"; then
				critical "error allocating storage container"
				exit 1
			fi
			if ! mkfs.btrfs "$filename" &> /dev/null; then
				critical "error creating BTRFS filesystem"
				exit 1
			fi
			notice "done"
		else
			warning "Abort."
		fi
		;;
	eject)
		if ! mount | grep -q "$THINDER_ROOT"; then
			error "Cannot eject, no storage environment connected"
			exit 1
		fi
		notice "Ejecting $THINDER_ROOT... "
		umount "$THINDER_ROOT" || critical "error ejecting storage environment" && exit 1
		;;
	connect)
		shift
		filename=$THINDER_BTRFS_IMAGE
		while thinder_getopt "${1:-}" opt val; do
			debug "processing subsubcommand option $opt"
			case $opt in
				--filename | -f)
					if [[ "$val" == "" ]]; then
						critical "$opt expects a parameter"
						exit 1
					fi
					filename=$val
					;;
				*)
					critical "unknown option: $opt"
					exit 1
			esac
			shift
		done
		if [[ "$filename" == "" ]]; then
			critical "please specify the filename of the container (--filename=f)"
			exit 1
		fi
		if mount | grep -q "$THINDER_ROOT"; then
			error "Already connected, please eject first"
			exit 1
		fi
		notice "connecting container $filename to environment $THINDER_ROOT... "
		mount -o loop "$filename" "$THINDER_ROOT" || critical "error connecting to storage container" && exit 1
		;;
	*)
		critical "'${1}' is not a valid $file subcommand"
		exit 1
esac
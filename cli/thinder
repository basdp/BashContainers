#!/usr/bin/env bash

set -o errexit -o nounset -o pipefail; shopt -s nullglob
root=${0%/*}
file=$(basename "${BASH_SOURCE[0]}")

. $root/lib/cli-utils
. $root/lib/thinder-environment.sh
. $root/lib/config.sh
. $root/lib/fileservices.sh

[[ -f $root/thinder.conf ]] && import_config_file $root/thinder.conf
[[ -f /etc/thinder.conf ]] && import_config_file /etc/thinder.conf
[[ -f ~/.thinder.conf ]] && import_config_file ~/.thinder.conf

THINDER_ROOT=${thinder_storage_root:-/var/thinder}
THINDER_NET_BRIDGE=${thinder_net_bridge:-thinder0}
THINDER_NET_ADDR=${thinder_net_addr:-"10.0.0.1/24"}
THINDER_BTRFS_IMAGE=${thinder_storage_container:-/thinder_storage}

THINDER_VERSION="0.0.1"
pushd $root > /dev/null
if [ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1; then
	tag=$(git tag --contains HEAD)
	if [[ "$tag" == "" ]]; then
		commitnr=$(git log -1 --pretty="%H")
		THINDER_VERSION="rev_${commitnr:0:10}"
	else
		THINDER_VERSION="$tag"
	fi
fi
popd > /dev/null

function usage {
	local cmdlen=${#file}
	echo "Usage: ${file} [OPTIONS] COMMAND [args...]"
	echo
	echo "Linux app containers on steroids"
	echo
	echo "Options:"
	echo "  -h, --help               Print this usage information"
	echo "  -V, --version            Print the version"
	echo "  --storage-root=d         Specify storage environment root"
	echo "  --storage-container=f    Specify default storage container"
	echo "  -v, --verbose            Specify the verbosity of the log output (1-7)"
	echo
	echo "Commands:"
	pushd $root > /dev/null
	for subcmd in *; do
		if [[ -d "$subcmd" ]] && [[ -f "${subcmd}/${subcmd}" ]] && [[ $subcmd == "${file}-"* ]]; then
			local name=${subcmd:cmdlen+1}
			echo -n "    ${name}"
			local n=$((16-${#name}))
			printf ' %.0s' $(seq 1 $n)
			local descr="$("${subcmd}/${subcmd}" __descr)"
			
			echo -n $descr | sed '1!d'
			aliases=$(echo -n "$descr" | sed '2!d')
			if [[ $aliases != "" ]]; then
				echo " (aliases: $(echo $aliases | sed 's/ /, /'))"
			else
				echo
			fi
		fi
	done
	popd > /dev/null
	echo
}

if [[ $# -eq 0 ]]; then
	# no parameters
	debug "no parameters given, print out usage"
	usage
	exit 0
fi

while thinder_getopt "${1:-}" opt val; do
	debug "processing global option $opt"
	case $opt in
		--help | -h)
			usage
			exit 0;
			;;
		--version | -V)
			echo "Thinder Environment version $THINDER_VERSION"
			exit 0;
			;;
		--verbose | -v | --loglevel)
			if [[ "${val:-}" == "" ]]; then val=6; fi
			if [ "$val" -ge 1 -a "$val" -le 7 ]; then
				LOG_LEVEL=$val
			else
				error "log level should be between 1..7 inclusive"
				exit 1
			fi
			;;
		--storage-root)
			[[ "$val" == "" ]] && critical "$opt expects a parameter" && exit 1
			THINDER_ROOT="$val"
			;;
		--storage-container)
			[[ "$val" == "" ]] && critical "$opt expects a parameter" && exit 1
			THINDER_BTRFS_IMAGE="$val"
			;;
		*)
			error "unknown option: $opt"
			exit 1
	esac
	shift
done

function run_command {
	export LOG_LEVEL THINDER_ROOT THINDER_NET_BRIDGE THINDER_NET_ADDR THINDER_BTRFS_IMAGE THINDER_VERSION
	$@
}

if [[ ! "${1:-}" == "" ]]; then
	subcmd=$1
	if [[ -d "$root/${file}-${subcmd}" ]] && [[ -f "$root/${file}-${subcmd}/${file}-${subcmd}" ]]; then
		shift
		run_command "$root/${file}-${subcmd}/${file}-${subcmd}" "$@"
		exit 0
	else
		# hmm, not yet.. maybe it's an alias?
		pushd $root > /dev/null
		for po in *; do
			if [[ -d "$po" ]] && [[ -f "${po}/${po}" ]] && [[ $po == "${file}-"* ]]; then
				descr="$("${po}/${po}" __descr)"
				aliases=$(echo -n "$descr" | sed '2!d')
				
				if [[ $aliases != "" ]]; then
					arr=($aliases)
					for a in "${arr[@]}"; do
						if [[ "$subcmd" = "$a" ]]; then
							shift
							run_command "${po}/${po}" "$@"
							popd > /dev/null
							exit 0
						fi
					done
				fi
			fi
		done
		popd > /dev/null
		
		critical "'${subcmd}' is not a valid Thinder subcommand"
		exit 1
	fi
fi

exit 0